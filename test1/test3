# a="123452317"
# print(a[-1])
# l = [
#             ['GK30 ', '2020082s8', 'NE ', 'S115977', ' ', '123x', ' rw21'],
#             ['SAHD', ' ', '0000', ' abuse ']
#         ]
import re
#定义一个标志位P.属于P的只能是小数。再定义一个标志位+，属于只能是123+091这样的数据

# s = a.split(".")
# print(s)



import time
def is_valid_date(str):
    '''判断是否是一个有效的日期字符串'''
    if len(str) == 8:
        try:
            time.strptime(str, "%Y%m%d")
            return True
        except:
            return False
    else:
        return False
def count_after_point(str):
    """ 根据assert_stand里规定的小数位数，判断str是否正确"""

    s = str.split(".")
    count = len(s)
    if count != 2:
        sign = 'm'
    else:
        real_count = 0
        for x in s:
            if x.isdigit():
                real_count += 1
        if real_count == 2:
            sign='p{}'.format(len(s[1]))
        else:
            sign="m"
    return sign

def is_valid_time(str):
    '''判断是否是一个有效的日期字符串'''
    if len(str) == 6:
        try:
            time.strptime(str, "%H%M%S")
            return True
        except:
            return False
    else:
        return False

import re

def findall_2byte(s,kaishi):
    '''
    查找字符串中的所有中日，中文标点符号，将切片长度剪掉等长
    :param s: 待查找字符串
    :return: list
    '''

    s_after_math = re.compile('[\u4e00-\u9fff\u30a0-\u30ff\u3040-\u309f\u3000-\u303f\ufb00-\ufffd]+').findall(s)
    if s_after_math is not None:
        print(s_after_math)
        leng = 0
        for i in s_after_math:
            leng += len(i)
        print(leng)
        kaishi=kaishi-leng
    print(kaishi)
    return kaishi
if __name__ == '__main__':
    b = findall_2byte("海外生産完成品                          SHA",40)
    # print(b)
    # a="（通シ）サービス企画センター "+" "*8
    # print(len(a))










