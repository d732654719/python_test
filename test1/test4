# a = "defa"
# b=a[0:2]
# c=a[2]
# print(b)
# print(c)
# for i in range(0,2):
#
#     print(i)
# a="4	8	2	2	4	10	2	10	2	2	14	3	1	6	4	1	8	5	1	16	10	6	6	1	1	15	11	11	1	3	3	3	1	1	3	1	2	1	1	8	6	3	2	5	4	3	2	5	4	1	25	8	5	10	15	11	10	9	20	10	11	10	11	10	1	3	8	8	1	40	40	1	25	1	7	5	8	1	1	1	1	1	1	1	1	1	1	1	10	8	8	8	10	18	18	18	18	18	18	18	18	18	18	3	18	4	2	8"
# b=a.split("\t")
# c=", ".join(b)
# print(c)
#
# result=['GK30', '20200828', 'NE', 'HH', '0NMW', 'S115977   ', 'LS', '0005289514', '00', '01', 'LQ104V1DG81B  ', 'KAA', ' ', '      ', '    ', '1', '20200902', '+003 ', ' ', '528951400+003   ', '0000001.00', '012349', '70007 ', '1', ' ', '0000000045.0300', '00000000.00', '00000000.00', '1', 'SHA', 'OSK', 'FOB', ' ', ' ', '   ', ' ', '  ', '9', ' ', '        ', '201906', '801', '02', '010  ', '0NMW', '   ', '  ', '     ', '    ', ' ', 'LQ104V1DG81B             ', '20200902', 'F2682', '          ', '000000000000.00', '00000000.00', '0000000000', '0000.0000', '20200828            ', '2020082899', '00000000.00', '0000000000', '00000000.00', '0000000000', '1', 'USD', '        ', '20200828', ' ', '                                        ', 'WUXI SHARP ELECTRONIC COMPONENTS CO     ', ' ', '                         ', ' ', '       ', '     ', '        ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '0000000000', '00000001', '00000001', '00000001', '0000001.00', '00000000000.000000', '00000000000.000000', '00000005000.000000', '00000005000.000000', '00000000000.000000', '00000000000.000000', '00000012031.000000', '00000012031.000000', '00000000000.000000', '00000018234.000000', 'USD', '00000000003.000000', 'GK30', 'NE', '20200828']
# d = "\t".join(result)
# print(d)
# a=['GK30', '20200828', 'NE', 'S115977   ', ' ', ' ']
# assert_a = [["mix", "F"],
#            ["num", "F"],
#            ["letter", "F"],
#             ["mix", "F"],
#              ["mix", "T"],
#             ["num", "F"]]

# def test_sa(self):
#     a = ['GK30', '20200828', 'NE', 'S115977   ', ' ', ' ']
#     assert_a = [["mix", "F"],
#                 ["num", "F"],
#                 ["letter", "F"],
#                 ["mix", "F"],
#                 ["mix", "T"],
#                 ["num", "F"]]
#     for i in range(0, len(a)):
#
#         # 是否允许为空为第一层
#         sign = ""
#         if a[i].isspace():
#             if assert_a[i][1] == "T":
#                 print("right1")
#                 continue
#             else:
#                 print("wrong,该行第{}个字段出错，内容：'{}'".format(i + 1, a[i]))
#                 continue
#         if a[i].isdigit():
#             sign = "num"
#         elif a[i].isalpha():
#             sign = "letter"
#         elif a[i].isalnum():
#             sign = "mix"
#
#         if sign == assert_a[i][0]:
#             print("right")
#
#         else:
#             print("wrong,该行第{}个字段出错，内容：'{}'".format(i + 1, a[i]))

# import time
# def is_valid_date(str):
#   '''判断是否是一个有效的日期字符串'''
#   try:
#     time.strptime(str, "%Y%m%d")
#     return True
#   except:
#     return False
# print(is_valid_date('20200839'))

# assert_result(a,assert_a)



